// Code generated by mockery v2.5.1. DO NOT EDIT.

package mocks

import (
	context "context"

	mock "github.com/stretchr/testify/mock"
	model "github.com/vielendanke/file-service/internal/app/fileservice/model"
)

// FileProcessingService is an autogenerated mock type for the FileProcessingService type
type FileProcessingService struct {
	mock.Mock
}

// DeleteMetadataByID provides a mock function with given fields: ctx, id
func (_m *FileProcessingService) DeleteMetadataByID(ctx context.Context, id string) error {
	ret := _m.Called(ctx, id)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, string) error); ok {
		r0 = rf(ctx, id)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// DownloadFile provides a mock function with given fields: ctx, id
func (_m *FileProcessingService) DownloadFile(ctx context.Context, id string) ([]byte, string, error) {
	ret := _m.Called(ctx, id)

	var r0 []byte
	if rf, ok := ret.Get(0).(func(context.Context, string) []byte); ok {
		r0 = rf(ctx, id)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).([]byte)
		}
	}

	var r1 string
	if rf, ok := ret.Get(1).(func(context.Context, string) string); ok {
		r1 = rf(ctx, id)
	} else {
		r1 = ret.Get(1).(string)
	}

	var r2 error
	if rf, ok := ret.Get(2).(func(context.Context, string) error); ok {
		r2 = rf(ctx, id)
	} else {
		r2 = ret.Error(2)
	}

	return r0, r1, r2
}

// GetFileMetadata provides a mock function with given fields: ctx, id
func (_m *FileProcessingService) GetFileMetadata(ctx context.Context, id string) (map[string]interface{}, error) {
	ret := _m.Called(ctx, id)

	var r0 map[string]interface{}
	if rf, ok := ret.Get(0).(func(context.Context, string) map[string]interface{}); ok {
		r0 = rf(ctx, id)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(map[string]interface{})
		}
	}

	var r1 error
	if rf, ok := ret.Get(1).(func(context.Context, string) error); ok {
		r1 = rf(ctx, id)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// SaveFileData provides a mock function with given fields: ctx, f
func (_m *FileProcessingService) SaveFileData(ctx context.Context, f model.FileModel) error {
	ret := _m.Called(ctx, f)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, model.FileModel) error); ok {
		r0 = rf(ctx, f)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// StoreFile provides a mock function with given fields: ctx, f
func (_m *FileProcessingService) StoreFile(ctx context.Context, f model.FileModel) error {
	ret := _m.Called(ctx, f)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, model.FileModel) error); ok {
		r0 = rf(ctx, f)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// UpdateFileMetadata provides a mock function with given fields: ctx, metadata, id
func (_m *FileProcessingService) UpdateFileMetadata(ctx context.Context, metadata map[string]interface{}, id string) error {
	ret := _m.Called(ctx, metadata, id)

	var r0 error
	if rf, ok := ret.Get(0).(func(context.Context, map[string]interface{}, string) error); ok {
		r0 = rf(ctx, metadata, id)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}
